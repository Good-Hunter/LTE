/*
 * Timer_module.h
 *
 *  Created on: 2014-5-28
 *      Author: castMemory
 */

#ifndef TIMER_MODULE_H_
#define TIMER_MODULE_H_

#include <stdio.h>
#include <c6x.h>
#include <ti/csl/cslr_bootcfg.h>
#include <ti/csl/csl_bootcfgAux.h>
#include <ti/csl/csl_cgem.h>
#include <ti/csl/csl_cgemAux.h>

/* CSL Timer Functional Layer */
#include <ti/csl/csl_tmr.h>
#include <ti/csl/CSL_tmrAux.h>

//包含自己定义的头文件
#include <SRIO_error.h>


//定义相关的宏常量

/*delay (in millisecond) before the timer generate one-shot pulse*/
#define PULSE_DELAY_MS 			2000				//64bit定时器的脉冲周期
/*period (in millisecond) of the clock generated by timer*/
#define CLOCK_PERIOD_MS 		1					//时钟周期
/*number of the clocks generated in this test*/
#define NUM_CLOCKS_GENERATED 	500
/*period (in millisecond) of the watch-dog timer*/
#define WATCH_DOG_PERIOD_MS 	3000


//	CPU的工作频率在Timer_drv.c文件定义为变量  gDSP_Core_Speed_MHz，后期加PLL时重新定义

/*since the timer runs at (DSP core clock)/6,the conversion between millisecond and timer PRD value is:
PRD = (xxx_MS/1000)*DSP_CLK_HZ/6		周期值和 Period寄存器值之间的转换公式
    = xxx_MS*(DSP_CLK_HZ/1000)/6*/


//Tmer定时器中断初始化
extern void Timer_Interrupts_Init(void);



/* 函数功能：完成64bit通用定时器的配置
 *
 * 函数参数：tmrNum		表示使用哪个定时器
 * 			periodValue	表示定时器周期，单位us---->注意：clock模式时让周期寄存器的值减半	*/
extern Uint32 Timer64bit_config( CSL_InstNum tmrNum, unsigned long long periodValue );



/* 函数功能：完成32bit定时器的配置
 *
 * 函数参数：tmrNum		表示使用哪个定时器
 * 			periodValue	表示定时器周期，单位us---->注意：clock模式时让周期寄存器的值减半	*/
extern Uint32 Timer32bit_config( CSL_InstNum tmrNum, Uint32 periodValue );


/* 此函数完成定时器的所有配置	*/
extern Uint32 Timer_config( CSL_InstNum tmrNum );

#endif /* TIMER_MODULE_H_ */
